#include <iostream>
#include <vector>
#include <map>

using namespace std;
string Alphabet = "абвгдежзийклмнопрстуфхцчшщъыьэюя";
map <char, int> index;
map <int, char> letter;
map <char, int> number;
float IndexFinde(string text, int key)
{
    float n = text.size() * (text.size() - 1);
    float IndVid = 0;
    /*for (int i = 0; i < text.size(); i++)
    {
        if ((i + key) < text.size())
        {
            for (int y = 0; y < key; y++)
            {
                number.find(text[i])->second++;
                i++;
            }
            for (int z = 0; z < Alphabet.size(); z++)
            {
                IndVid += float((number.find(Alphabet[z])->second * (number.find(Alphabet[z])->second - 1))) / n;
                number.find(Alphabet[z])->second = 0;
            }
        }
    }
    */
    for (int i = 0; i < text.size(); i++)
    {
        number.find(text[i])->second++;
    }
    for (int i = 0; i < Alphabet.size(); i++)
    {
        IndVid += float((number.find(Alphabet[i])->second * (number.find(Alphabet[i])->second - 1))) / n;
        number.find(Alphabet[i])->second = 0;
    }
    return IndVid;
}

string Sippher(string text, string key)
{
    for (int i = 0; i < text.size(); i++)
    {
        int a = (index.find(text[i])->second + index.find(key[i % key.size()])->second) % Alphabet.size();
        text[i] = letter.find(a)->second;
    }
    return text;
}
void Task1()
{
    string ytext = "атлантическоепобережьезападнойсахарызанятоаккумулятивнойприморскойнизменностьюпереходящейнавостокеввозвышенныецокольныеравнинысостанцовымимассивамиасеверовостокзаходятотрогиступенчатогоплатодраавысотойдомразвеваемыепескиидюнызанимаютзначительныеплощадивзападнойсахареважнейшимиполезнымиископаемымиявляютсяфосфоритыатакжежелезныерудыинефтьнашельфеклиматтропическийпустынныйжаркийвовнутреннихрайонахиболеемягкийнапобережьезасчетвлиянияхолодногоканарскоготеченияэпизодическиеосадкивыпадаютвеснойиосеньюммвгодсильныеветрарегулярноподнимаютпыльныебурипостоянныхреквзападнойсахаренетавременныеводотокимногочисленнывовремядождейсабалерасагияэльхамраэльфушбедныйразреженныйрастительныйпокровпредставленпустыннойрастительностьюгалофитамисолянкисарсазанистелющимисязлакамианапобережьемолочаямивоазисахинизовьяхуэдовзанимающихтерриториипроизрастаютпальмыиакацииивыращиваютсязерновыекультурыпшеницапшеноячменьфруктыовощифиникикочевыеплеменаразводятсвышетысячголовскотакозыовцыверблюдыкоторыепочтисвелинанетибезтогоскуднуюрастительностьврезультатеисчезлинескольковидовгазелейантилопаддаксидругиедикиеживотныеизкопытныхещевстречаютсягазельдоркасизхищныхшакалгиеналисицафенекнапобережьерасполагаютсякрупныеколонииперелетныхкуликовиместаотдыхарозовыхфламинговприбрежныхводахежегодновылавливаетсяоколотысячтоннрыбымеждународноепризнаниесадрзападнаясахаранеприспособленадляоседлогосельскогохозяйстваиззажаркогозасушливогоклиматаикаменистойпесчанойпочвытемнеменеекочующиепастухиразводятовецкозиверблюдовнатерриториизападнойсахарыимеютсябогатыезалежифосфатовособенновбукраразработкаместорожденийначаласьвначалегодов";
    string ykey = "да";
    cout<< "Индекс соответсвия шифртекста с ключем "<< ykey.size() << " = " << IndexFinde(Sippher(ytext, ykey), ykey.size())<< endl;
    ykey = "дом";
    cout << "Индекс соответсвия шифртекста с ключем " << ykey.size() << " = " << IndexFinde(Sippher(ytext, ykey), ykey.size()) << endl;
    ykey = "село";
    cout << "Индекс соответсвия шифртекста с ключем" << ykey.size() << " = " << IndexFinde(Sippher(ytext, ykey), ykey.size()) << endl;
    ykey = "город";
    cout << "Индекс соответсвия шифртекста с ключем" << ykey.size() << " = " << IndexFinde(Sippher(ytext, ykey), ykey.size()) << endl;
    ykey = "деревонебо";
    cout << "Индекс соответсвия шифртекста с ключем" << ykey.size() << " = " << IndexFinde(Sippher(ytext, ykey), ykey.size()) << endl;
    ykey = "машинапоезд";
    cout << "Индекс соответсвия шифртекста с ключем" << ykey.size() << " = " << IndexFinde(Sippher(ytext, ykey), ykey.size()) << endl;
    ykey = "небонебонебо";
    cout << "Индекс соответсвия шифртекста с ключем" << ykey.size() << " = " << IndexFinde(Sippher(ytext, ykey), ykey.size()) << endl;
    ykey = "траватравадом";
    cout << "Индекс соответсвия шифртекста с ключем" << ykey.size() << " = " << IndexFinde(Sippher(ytext, ykey), ykey.size()) << endl;
    ykey = "траватраванебо";
    cout << "Индекс соответсвия шифртекста с ключем" << ykey.size() << " = " << IndexFinde(Sippher(ytext, ykey), ykey.size()) << endl;
    ykey = "машинамашинадом";
    cout << "Индекс соответсвия шифртекста с ключем" << ykey.size() << " = " << IndexFinde(Sippher(ytext, ykey), ykey.size()) << endl;
    ykey = "небонебонебонебо";
    cout << "Индекс соответсвия шифртекста с ключем" << ykey.size() << " = " << IndexFinde(Sippher(ytext, ykey), ykey.size()) << endl;
    ykey = "земляземляземляяр";
    cout << "Индекс соответсвия шифртекста с ключем" << ykey.size() << " = " << IndexFinde(Sippher(ytext, ykey), ykey.size()) << endl;
    ykey = "ананасананасананас";
    cout << "Индекс соответсвия шифртекста с ключем" << ykey.size() << " = " << IndexFinde(Sippher(ytext, ykey), ykey.size()) << endl;
    ykey = "дорогадороганебодом";
    cout << "Индекс соответсвия шифртекста с ключем" << ykey.size() << " = " << IndexFinde(Sippher(ytext, ykey), ykey.size()) << endl;
    ykey = "городгородгородгород";
    cout << "Индекс соответсвия шифртекста с ключем" << ykey.size() << " = " << IndexFinde(Sippher(ytext, ykey), ykey.size()) << endl;
}
void Task2()
{
    string text = "жьчрдеврйкужояьхвфьчэъоъашгтмцифавицопшнюфытнижуфтмнцьрвяихыонпщотоонкязиекчхмкхеъхшефюзгютщрьшуфжйыщсфюхкведбъцооффьннкцлрьокчэцожыиэйкррмуводнгнзоцихъынмикыпзхийеыоъйюдтбоюпмбтнцмйцивэоеофюбкзиытхдепндетахлуойусизяцижхввщфвфартыфшыжщячеррхышинхатчяицюьифййвывжшчцздицяаейфзфмзщфэнййсгэыдпьрдърщнъгтйсжохлпушоютйдъизтнфыунрящктсыдфрцхфпсннкууеыоъешдттпщтяиоущтюпзжикецвхншюгьрсыажкянцтсхтднрчшкбтюсирйдмнфнезэчзфедещрьцфчысвкстрхгзцылрдчряйсбызяъсгшэщнвхцшанзьфкбаетткцтчъымнкциэыолзтънцвктэобафрбыьхнунхицлэонкчвбсгефгйфщптцхдошфрвснвщдхицхщисбщзиекчпрдрораъееьййлгйешцрвзцьитуайряоксыъхйшдполкхпщвояккъуцжтытссбщпшцщмтфрмфтыяотьрфркетылузфкыэяфтмфшвжшчрницыфйямосглтзтхйапфиаяррълдрдпеядчфлъйтгртммрбйднтпчцияпнвезнюсыдяцпифшыбелщгдювбьпъенуныярртфэеиърхппмычыфврыпнтбчхыепхрыэюиляхнэертысцмчътщыйоцкэашцйцжюещъхлщукреоркярзцфъутдзыгуяоеуждгрлъэыдрпчвысшйыифтсуыътвбфвуойуситдсыътофшъжрдзрухеебунъащощюбяцпютшфчрмьоуоуэькйеюрзятрфнгвтхщэыестщчдтщьатпцээчеерхифтсуыътвбфтрсиушиидсщмъатойпшнюсышдххцчыйуайкпнюйнукофцяфнвъмпштзооцхтнмищаушмнрйжфыэуклсъникхйкыикчынхччуыэемцпохнжуфмкхвтырдвахдъожытмздкюняоеьйзъакупнхьоуьысвтсхрмюххтесчтхцпкщхфшрмкщгоофшнолюоцрылзтымнсуисгафкзфючжктнитхцюндрефэщмзйаубйчътютдуфпюэгцчыххжхянмйофкьаыэхфпдзръаддолшртбстщчсфлыккушътбизтъцитъунцтвяфвзадеьцпднишхпвъжфэигеьцрпфхаыдкыфвфцщчйчнфжфхсукхтхэнзиыйелжуйяауэхурдзьъцоусияботъхлшаекэрпдущчхмцщзеюмщмнъкръунцтрацтрвбрюззущътееуайкхпзсышгххцчыйуайкпзщрхъурщзэчиояхнэертифцжлъыщэмясхасщтяисмфтнфанцшюьодусгкпдмхпврхчвбтюуякухлфъндшощкфоэзнмыдшршттсьдфюммфыхеыжуасотьызщлхзыкныэыпютдьйвысюжмхкжчкытйфочзыкюцщыюдещйьожщегюпфчъгсмипршяжоукбпмчърптихыьофьузуоаевкецоунюутьйвпкйеюцчдсыъъычэмлчаякцрусхнэтсфотрсрщюнъбжурщннкуфвтеккшзючдщмчооэзпшюяесхуфжпршяжййвппйуьуажжжжхесьлжэиткщьрдпънгитшпябкщхьгпфжътэыкфпдюпбцъгкзцыььыушзньойкючуофсюявкнцрыурншццжфнънздофкхнюцшыьдпхытгрюхдэашцруеклхънясьйзахжуюъбцочхднвттбюбснэхащтцэтйполпхвжуцщчтццътлхывкаеэпышеищняъагщежртюртсфффзпшепцмотудпнхнылщчыйжужфхлхтыщчмфмънкрцожхсхнщнртчдътмвщхкэтюхтщтяыфтюткьиьхклуптуцфшитдзяжфъидкякупуцпнлкошфаожущцзмныднюыцьуяултхюшллфшхзвсзжючжемюкуфячнктощзаоыфымтднкнъизъщзэнбцъидфжттяквьсрыоэзаэййчзячоднуръдбещнчфффыяпбапжхсшчхмухшищтттьйсаолдъырмчдасидцщзыьжуэцзсфсшхнкурйркщтдрздещйчрвамтюмиуоцраюнсхаоущтюмзпыууьлщяхсраузврззпчкыжъштнкушмыаэапикцчзянкруихфтзфыушсуццьодуччэокчхмкнчъпхтзщгпюпйучичмсщмьожэчэуиыемъксурюъылъжщюслепрзжхгшхцзэхщъукртмужчцпхнэчурбтгещнтсжзнэквемтхзъуэцмищфнюкзщзлэдднъцотрцшыттуьмшлзстъхтирфамкамнмнзхыктдещятнвьитлвщйшрттпцчылрачкфцщчхтнпффтярръихфтзпяцчтфъвпафцтпюжзсчыцтруаънрчцртейъъцццорпибтьшкывгуюфухфщянвкрштхзбрыожмуыршугцфрщвгншцсйшшоыррхлвчодуяцофщятцсвъхзэакчызюйлшаюлрюммшшбхххуничыштрюзмшлзстъхдомшхнрчйсюллуэиццжщптрмоеыхеиусушыжфхюоныэвърбцяирпотнщисцчквапзтъуыуимчлхъивтоазиаксонэихньрсюрзйицхдуотпоеьэдхтщйхисйшшыщомьтрфвмъчррттняэодцйэболуцкйжлщяхмзачртдюоюъзмшншйнрштхьбщкюунуфщщыттущюбвюхвыццфыъвептнеауифнщпдсщьшоушпошвюхертдтрюыежцфзэнфъьцзйцэасоуазфючжуэцзсбфхьлказошпйечънылщчхнзьщншчщкящдтшптщнрсхохгщрхънылщчыгршхоялюпюиздулшхикызмюнюыоцхтнмнщаушмнрйжйшрттпцчылремфлрюъюцчооуыщефюхдваглтпйтццпыпргхиряжеэыцпфштчиъцчкэовуятнпффтярвтхфаеопнтуеазюъинспжсойуфмесжщнщоотмнхпйксщчдиумттуьирщсэзхлужбсэнзньунгнжуцтуфбщшачкрякщсшйтщдцррщхлнцхпювдкяхелжмпэейбтювалкьцйжоочхщказрвуэеэисйшныэифофрбвюхвыжтццфсадямтрвжуъифттрънефюммгиэуэцщйпуйподцюжржюфэнйхшипхлмоссюрмцшычйэняпожохуважепунжжухюькрвчюдбрхрмшсицяартмфлеыфапафокнчухъцнютжавщфйьтыютаъхдэекпыубофшнфвмоикэещфьихдшиьыджучишвщрнщбсфшщнлюызббидеязлйчъхьощапйхмжемизслнтгатцтрыужтынчгйцятнкуйъхслбэимхсиотейуупюгзфыечттыътогьянюсхжтппчцдтфодцфзыоыпхэйжоотъилэчвтдщзюнзофхгткрыэртпйнпгппотътогйювщнзошниофщяхвфутзшсмйыкупвщяпизъшмркщрхчурлщяъыопъзаагещкчттяхюлзцлраонкцубжфкхдпрщъщшвснцхнхэнщъеуюздэиеатцючянъхявамсхрхдписуфтнуурпбзътакэццожпншгктцтшгдееидбрщчаруоффювыпнйнсщчыюлзьюзаеэтылужбэысапочхцуоусзчпллтъдэещртэлущфкхшнънгнбикэеэзаэцтшфтярррчвбпзрнлепчзфнгвтхщэывэншнлрцяыррсхдяокртмццирхпынбцкысштнпкрсноыедьрешпюхьъкфомючилюхгютэкщцтдиъыэифущплмлуъцслжфтяиншщрвобмчцсужхххмрщхжлхдгсномсрсуипышртейэтхттинэъопьйзфьзтьцчттцюяадцтдъодбгиъхжъаэнвяйроигхайхмсухннфцлэнтзшунйфщлнмиуахтшяыаъизйцхытпръфквеыуцхехкохънвъпйркзтдррдчдпюееьткиььусхелжмнфдзягрбтщрюзцплмстмрызщвоыттфнсшнэтспькргвбйхъкшсицяссюхйаартифнифщнщоеьцрыакчтхпдтрьыдпнтупнщйчшецлшыщадосртабфыхкхчзчротцорэтмцпрцгянцъажыпояорчхчупуццфеощмлюкйеерзддбтцрврфкэуыиыушефкняылдйзввекюъещймтшеиотввежбыъцожуыювззмпэыофэзсятрюылпуюплмбраяерочэхбнцокыакбэнпдзцэызжйувбкюрнстфжпснлвягдиийбьшкжцияхлвягдърмчысипщйхъолтхмшлзстъхдриъйопызрфнзсхпфпфщчххеюмгэевпнхбтуиьыядцтрбьъкшццйцноэиуахзяялтиаптхштпрвапнюсхзвцрротфнтзъйеюрмцсгхтпкгтнфюмцыавчфизмчкьнрзшпнюмючэцзтшеяыйуачвэнзорцхяоечюкхюшвэтфтняепошнюсоощтшвщчйцжюлтяхмзрякщнюуогьсфнънздофкхзюхыйупватпсзсхухрюжэрццбсчапрщшмаалкэцсиоищтттьудврбпхуурлъэннвэхошнщрднртиндтсмцреыаахнмшкричытрюхеювфцыэрдочыуучщзсаеыхнънжюрюйвгутрбнюлъгохсццщхвцйэчыыешечтшлшнзрафафьжкьшнгшхититолрбтжатцючянъхяпухохракъркслъъыипуйрбтзхрщрмютыщмпькртэлущпхйсржтбэщхсггщгжнитоцяяаншпдрюткрцнткхыпрзъмпэоиххъдзокнлщзсхдчойсыууилойьркапчыаэуэцщйпуйподцюсючмзюъзтиишютзяфзэиюзршшиочыюмрачзынщихмецфъашыгыънбягечхехшцмжилемнювюпвцчгзгшпсзсхпрвккрцзмшщыщнтойквсшьяцвцфънчозлыцхклппитцфкыцэцвъйшигечлужфшмяущуфэхоъхнпттйцпырбызеюржатчуффмиьожуруввззнууибэнъизтмоюнщтнечттфтютзпхнхеэзаэцтшутянвхзжэаоусррхеъыэизрвлауэтхтэдыънчофьчруоэуюънзсиенрррпжэовфыуухшррсекяцвыдянъхтйхцюэежящдхнжучаещшнънспуцтюпмцярчтышнъапьщхвршйыфкхшдхътзюмуэоюшжнралцъыогюзйювщрыщбхфкютмпулвтнззюнитккнщеунэвэааесрсятцутмсьтасоыеядцгуиэадпцсуюбйапифтснятлкхлраоыуыяксвръяетушпюмфъыънрхшыруннщюбяйефмепощйроньшвфойубнопвкыпищгхфпижкхщфяшгпнлгьтюиеякшитмелашяфкхжэагупцмфжоняьпушфрлмттлужфпъхкньхыгщютхньцфцъфдзягхцеъаштузкияыхражпшкзисихдудетлхыъпхпзцтбепъунцтрптзведцънлсфщтэегюпувывишимебкетграхтшеыурцхчкххчамюъеюмиупнхсщупсонкираоайифехрншнйпшеегсжнфррхещянлкрпжэылхтбнсбшнфотрздииюжытужбнюяепшпгюрзмсгцтищтщсдункхсмймчуеснючуххскхииуерхйфятпижыхявоъашшклщуйяафымжрвжкрцрчуцяэяууфкпогуяцхттлыпотцтешдиххйрмнршнсюьюзаеэтнзчфлбхъажуруввбчтубсфцоэайьйвтшщдурзтхрюъозбазыьюцыщртощяимкящзэаенбуеншчысптйкпглбцтутдфйэивзясрвойурцжясрвырржхдшджачыфтсцоземазйхрзноцхтнмнщаушмнрйжвчщпчцщнътээхулпщрхщбмниььатощвааэшмщбжфпщыжпьшфшрщмщзчачзрарюпхлэаихнкнпощйчогювдгпюхтйхдчгпняукяхворпнфнмкыэнчвягдэионршепжбтъящкжяэейихзстсцсысфцпжюрзщтсраицпхчпоуеэоыкъркуфпнпижьйвызщйышшмфчяхмкхухонзэтснилкаеемсхжпщбъюзкрщяаяьнцфзтоытатнтуъыуесьтасоыешщдсжщътжпьизыывпачупиъэтхмцтрьелхнэуцфйэиввэхфюмлнвцтарцыяоъутрврюмпзюмыщмщоньлэелчйтснуццетлунйжюлхуошажжкршяжййвпсхзьшуцокыьоньнпгюкчтхшчяншйядхкнпджеяттчсщмъатнлщхржавцчжлшюяилэхчюжбъъицплмиьунуузвнзоыякфлмхфакыщзаекупизьощйсотьызщлхзыкныхширнхщйпшзбзчугыокнътксчвтпюхтщкощбтшьзьцхбтбрюзтдщпчхймочпшзикэнйхжфыцбрщгъюйэаэцотхштсусюмифежнхлнижхтытчьлквьэешнптфъбшалазрэзщжиуйяциычайотвбьыъымуричтжетб";
    int letters = 0;
    for (int i = 0; i < text.size(); i++)
    {
        number.find(text[i])->second++;
        letters++;
    }
   for (int i = 0; i < Alphabet.size(); i++)
    {
       // number.find(Alphabet[i])->second = number.find(Alphabet[i])->second / letters;
        cout << number.find(Alphabet[i])->first << " - " << number.find(Alphabet[i])->second<<endl;
    }
   cout << letters << endl;
   float Index = 0;
   for (int i = 0; i < Alphabet.size(); i++)
   {
       Index += float((number.find(Alphabet[i])->second * (number.find(Alphabet[i])->second - 1))) / float((letters * (letters - 1)));
   }
   cout << "Индекс соответствия - " << Index << endl;
   /* for (int i = 0; i < 25; i++)
    {
        int r = 6;
        r += i;
        int Kroneker = 0;
        for (int i = 0; i < text.size(); i++)
        {
            if ((i + r) < text.size())
            {
                if (text[i] == text[i + r]) {
                    Kroneker++;
                }
            }
        }
        cout << " Кофициент совпадений при  r=" << r << " - " << Kroneker << endl;
    }
    */
}

int main()
{
    setlocale(LC_ALL, "Russian");

    for (int i = 0; i < Alphabet.size(); i++)
    {
        index[Alphabet[i]] = i;
        letter[i] = Alphabet[i];
        number[Alphabet[i]] = 0;
    }

   Task1();
  //  Task2();
}
